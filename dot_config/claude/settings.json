{
  "env": {
    "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": "1"
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "WebSearch",
        "hooks": [
          {
            "type": "command",
            "command": "jq -n --arg reason 'Use Bash(gemini --prompt \"WebSearch: <query>\") instead.' '{decision: \"block\", reason: $reason}'"
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      "Read(**)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Write(src/**)",
      "Write(docs/**)",
      "Write(.tmp/**)",
      "Bash(uv:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git pull:*)",
      "mcp__gemini-cli__ask-gemini",
      "mcp__context7__resolve-library-id",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__write_memory",
      "mcp__serena__list_dir",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__read_memory"
    ],
    "deny": [
      "Bash(sudo:*)",
      "Bash(rm ~:*)",
      "Bash(rm /:*)",
      "Bash(rm -rf ~:*)",
      "Bash(rm -rf /:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(git rebase:*)",
      "Read(.env)",
      "Read(id_rsa)",
      "Read(id_ed25519*)",
      "Write(.env)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(nc:*)",
      "Bash(python:*)",
      "Bash(python3:*)"
    ]
  }
}